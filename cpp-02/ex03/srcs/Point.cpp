/* ************************************************************************** */
/*                                                                            */
/*                                                        :::      ::::::::   */
/*   Point.cpp                                          :+:      :+:    :+:   */
/*                                                    +:+ +:+         +:+     */
/*   By: aaugu <aaugu@student.42lausanne.ch>        +#+  +:+       +#+        */
/*                                                +#+#+#+#+#+   +#+           */
/*   Created: 2023/11/23 11:26:29 by aaugu             #+#    #+#             */
/*   Updated: 2023/11/24 12:40:25 by aaugu            ###   ########.fr       */
/*                                                                            */
/* ************************************************************************** */

#include "../includes/Point.hpp"

/* ************************************************************************** */
/*                          CONSTRUCTORS & DESTRUCTOR                         */
/* ************************************************************************** */

Point::Point(void) : _x(0), _y(0) {}

Point::Point(const float x, const float y) : _x(x), _y(y) {}

Point::Point(const Point& point) : _x(point._x), _y(point._y) {}

Point::~Point(void) {}

/* ************************************************************************** */
/*                            OVERLOADING OPERATORS                           */
/* ************************************************************************** */

// ---------------------------- Copy assignment ----------------------------- //
Point&	Point::operator=(const Point& rhs)
{
	(void) rhs;
	return (*this);
}

/* ************************************************************************** */
/*                                   GETTERS                                  */
/* ************************************************************************** */

const Fixed	Point::getX() const {
	return (this->_x);
}
const Fixed	Point::getY() const {
	return (this->_y);
}